[versions]
gradle = "8.12"
jvm = "21"
kotlin = "2.1.0"
compose-multiplatform = "1.7.3"
proguard = "7.6.1"
buildConfig = "5.5.1"
kotlin-coroutines = "1.10.1"
logback = "1.5.15"
log4jToSlf4j = "2.24.3"
kotlinLogging = "7.0.3"
ffmpeg = "6.1.1-1.5.10" # Update to 7.1-1.5.11 or newer when https://trac.ffmpeg.org/ticket/11366 is resolved
vlc = "3.0.21"
vlcj = "4.8.3"
wavySlider="2.0.0"
persianDateTime = "4.2.1"
junit5 = "5.11.4"
assertj = "3.27.0"
mockk = "1.13.14"
tika = "3.0.0"
jna = "5.15.0"
jaudioTagger = "3.0.1"
image-comparison = "4.4.0"
system-stubs = "2.1.7"
haze = "1.3.1"

[libraries]
kotlin-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlin-coroutines" }
kotlin-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlin-coroutines" }
kotlinLogging = { group = "io.github.oshai", name = "kotlin-logging-jvm", version.ref = "kotlinLogging" }
logback-classic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }
log4jToSlf4j = { group = "org.apache.logging.log4j", name = "log4j-to-slf4j", version.ref = "log4jToSlf4j" }
ffmpeg = { group = "org.bytedeco", name = "ffmpeg", version.ref = "ffmpeg" }
vlcj = { group = "uk.co.caprica", name = "vlcj", version.ref = "vlcj" }
mahozad-wavySlider = { group = "ir.mahozad.multiplatform", name = "wavy-slider", version.ref = "wavySlider" }
persianDateTime = { group = "com.github.mfathi91", name = "persian-date-time", version.ref = "persianDateTime" }
apache-tika = { group = "org.apache.tika", name = "tika-core", version.ref = "tika" }
# Alternative: com.mpatric:mp3agic but it does not support extracting FLAC cover art etc.
jAudioTagger = { group = "net.jthink", name = "jaudiotagger", version.ref = "jaudioTagger" }
jna-jpms = { group = "net.java.dev.jna", name = "jna-jpms", version.ref = "jna" }
jna-platform-jpms = { group = "net.java.dev.jna", name = "jna-platform-jpms", version.ref = "jna" }
junit5 = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junit5" }
junit5-vintageEngine = { group = "org.junit.vintage", name = "junit-vintage-engine", version.ref = "junit5" }
imageComparison = { group = "com.github.romankh3", name = "image-comparison", version.ref = "image-comparison" }
assertj = { group = "org.assertj", name = "assertj-core", version.ref = "assertj" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
systemStubs-core = { group = "uk.org.webcompere", name = "system-stubs-core", version.ref = "system-stubs" }
systemStubs-jupiter = { group = "uk.org.webcompere", name = "system-stubs-jupiter", version.ref = "system-stubs" }
haze = { group = "dev.chrisbanes.haze", name = "haze", version.ref = "haze" }
haze-materials = { group = "dev.chrisbanes.haze", name = "haze-materials", version.ref = "haze" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
# Alternative: https://github.com/yshrsmz/BuildKonfig
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
